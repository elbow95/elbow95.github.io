I"1/<p>毕业设计所做项目涉及ARM单片机系统，需要通过WIFI模块连接到服务器进行Mysql数据库查询并完成数据的下发，经过一段时间的额WIFI模块直接连接到Mysql数据库的尝试之后放弃了这个想法，改为在使用<code class="language-plaintext highlighter-rouge">C# winform</code>在电脑端写一个中间程序进行利用socket连接到WIFI模块来接收单片机系统请求，并完成数据库查询及数据下发等功能。</p>

<p><strong>关于WIFI模块的使用方法可参考之前发表的博文</strong><a href="./EMW3162-usage.html" target="_blank">EMW3162 wifi模块使用说明</a>。</p>

<h2 id="基本功能">基本功能</h2>

<ul>
  <li>点击启动建立服务器</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre><span class="n">Thread</span> <span class="n">threadWatch</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span> <span class="c1">//负责监听客户端的线程</span>
<span class="n">Socket</span> <span class="n">socketWatch</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span> <span class="c1">//负责监听客户端的套接字</span>

<span class="k">private</span> <span class="k">void</span> <span class="nf">controlserver_btn_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
<span class="p">{</span>
	<span class="c1">//定义一个套接字用于监听客户端发送的信息 包含3个参数（IP4寻址协议，流式连接，TCP协议）</span>
	<span class="n">socketWatch</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Socket</span><span class="p">(</span><span class="n">AddressFamily</span><span class="p">.</span><span class="n">InterNetwork</span><span class="p">,</span> <span class="n">SocketType</span><span class="p">.</span><span class="n">Stream</span><span class="p">,</span> <span class="n">ProtocolType</span><span class="p">.</span><span class="n">Tcp</span><span class="p">);</span>
	<span class="c1">//获取当前电脑IP地址，作为服务器地址</span>
	<span class="n">IPAddress</span> <span class="n">ipaddress</span> <span class="p">=</span> <span class="n">Dns</span><span class="p">.</span><span class="nf">GetHostEntry</span><span class="p">(</span><span class="n">Dns</span><span class="p">.</span><span class="nf">GetHostName</span><span class="p">()).</span><span class="n">AddressList</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
	<span class="c1">//将IP地址和端口号绑定到网络节点endpoint上</span>
	<span class="n">IPEndPoint</span> <span class="n">endpoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">IPEndPoint</span><span class="p">(</span><span class="n">ipaddress</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
	<span class="c1">//监听绑定的网络节点</span>
	<span class="n">socketWatch</span><span class="p">.</span><span class="nf">Bind</span><span class="p">(</span><span class="n">endpoint</span><span class="p">);</span>
	<span class="c1">//将套接字的监听队列长度限制为20</span>
	<span class="n">socketWatch</span><span class="p">.</span><span class="nf">Listen</span><span class="p">(</span><span class="m">20</span><span class="p">);</span>
	<span class="c1">//创建一个监听线程</span>
	<span class="n">threadWatch</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="p">(</span><span class="n">WatchConnecting</span><span class="p">);</span>
	<span class="c1">//将窗体线程设置为与后台同步</span>
	<span class="n">threadWatch</span><span class="p">.</span><span class="n">IsBackground</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
	<span class="c1">//启动线程</span>
	<span class="n">threadWatch</span><span class="p">.</span><span class="nf">Start</span><span class="p">();</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>创建监听客户端连接</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="n">Socket</span> <span class="n">socConnection</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span> <span class="c1">//负责监视客户端连接</span>
<span class="n">IPEndPoint</span> <span class="n">client</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>    <span class="c1">//客户端IP与port</span>
<span class="n">IPAddress</span> <span class="n">clientIP</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>   <span class="c1">//客户端IP地址</span>
<span class="kt">int</span> <span class="n">clientPort</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>          <span class="c1">//客户端port端口</span>

<span class="k">private</span> <span class="k">void</span> <span class="nf">WatchConnecting</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="c1">//客户端连接成功，获取客户端IP及PORT信息</span>
		<span class="n">socConnection</span> <span class="p">=</span> <span class="n">socketWatch</span><span class="p">.</span><span class="nf">Accept</span><span class="p">();</span>
		<span class="n">client</span> <span class="p">=</span> <span class="p">(</span><span class="n">IPEndPoint</span><span class="p">)</span><span class="n">socConnection</span><span class="p">.</span><span class="n">RemoteEndPoint</span><span class="p">;</span>
		<span class="n">clientIP</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">Address</span><span class="p">;</span>
		<span class="n">clientPort</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">Port</span><span class="p">;</span>
	
		<span class="c1">//创建一个通信线程，注册接收数据函数</span>
		<span class="n">ParameterizedThreadStart</span> <span class="n">pts</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ParameterizedThreadStart</span><span class="p">(</span><span class="n">ServerRecMsg</span><span class="p">);</span>
		<span class="n">Thread</span> <span class="n">thr</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="p">(</span><span class="n">pts</span><span class="p">);</span>
		<span class="n">thr</span><span class="p">.</span><span class="n">IsBackground</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
	
		<span class="c1">//启动线程</span>
		<span class="n">thr</span><span class="p">.</span><span class="nf">Start</span><span class="p">(</span><span class="n">socConnection</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>监听接收客户端上传数据</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="k">private</span> <span class="k">void</span> <span class="nf">ServerRecMsg</span><span class="p">(</span><span class="n">Object</span> <span class="n">uploadMsg</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">Socket</span> <span class="n">socketServer</span> <span class="p">=</span> <span class="p">(</span><span class="n">Socket</span><span class="p">)</span><span class="n">uploadMsg</span><span class="p">;</span>
	<span class="c1">//持续监听</span>
	<span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">try</span>
		<span class="p">{</span>
			<span class="c1">//创建一个内存缓冲区 其大小为1024*1024字节 1M</span>
			<span class="kt">byte</span><span class="p">[]</span> <span class="n">arrServerRecMsg</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Byte</span><span class="p">[</span><span class="m">1024</span> <span class="p">*</span> <span class="m">1024</span><span class="p">];</span>
			<span class="c1">//将接收到的信息存入到内存缓冲区 并返回字节数组的长度</span>
			<span class="kt">int</span> <span class="n">length</span> <span class="p">=</span> <span class="n">socketServer</span><span class="p">.</span><span class="nf">Receive</span><span class="p">(</span><span class="n">arrServerRecMsg</span><span class="p">);</span>
			<span class="c1">//将机器接收到的字节数组转换为人可以读懂的字符串</span>
			<span class="n">strRecMsg</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="n">arrServerRecMsg</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">catch</span><span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>发送数据到客户端</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="k">private</span> <span class="k">void</span> <span class="nf">ServerSendMsg</span><span class="p">(</span><span class="n">String</span> <span class="n">downloadMsg</span><span class="p">)</span>
<span class="p">{</span>
	<span class="c1">//此处用Default发送中文不会乱码。</span>
	<span class="kt">byte</span><span class="p">[]</span> <span class="n">arrSendMsg</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">downloadMsg</span><span class="p">);</span>
	<span class="c1">//向客户端发送字节数组信息</span>
	<span class="n">socConnection</span><span class="p">.</span><span class="nf">Send</span><span class="p">(</span><span class="n">arrSendMsg</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>
    <p>连接到数据库并进行通信</p>

    <p>这里使用<code class="language-plaintext highlighter-rouge">mysql.data.dll</code>插件连接数据库，其是C#操作mysql的驱动文件，可以使C#语言更简洁的操作mysql数据库，也是最方便的一种连接方式，这里参考了<a href="http://www.cnblogs.com/sosoft/p/3906136.html" target="_blank">c# 连接Mysql数据库</a>。</p>
  </li>
</ul>
:ET